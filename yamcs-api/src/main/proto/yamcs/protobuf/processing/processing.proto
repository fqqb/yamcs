syntax="proto2";
  
package yamcs.protobuf.processing;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "ProcessingProto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "yamcs/api/annotations.proto";
import "yamcs/protobuf/commanding/commanding.proto";
import "yamcs/protobuf/pvalue/pvalue.proto";
import "yamcs/protobuf/yamcsManagement/yamcsManagement.proto";
import "yamcs/protobuf/yamcs.proto";

service ProcessingApi {

  // List processor types
  rpc ListProcessorTypes(google.protobuf.Empty) returns (ListProcessorTypesResponse) {
    option (yamcs.api.route) = {
      get: "/api/processor-types"
    };
  }
  
  // List processors
  rpc ListProcessors(ListProcessorsRequest) returns (ListProcessorsResponse) {
    option (yamcs.api.route) = {
      get: "/api/processors"
    };
  }
  
  // Get a processor
  rpc GetProcessor(GetProcessorRequest) returns (yamcsManagement.ProcessorInfo) {
    option (yamcs.api.route) = {
      get: "/api/processors/{instance}/{processor}"
    };
  }
  
  // Delete a processor
  rpc DeleteProcessor(DeleteProcessorRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      delete: "/api/processors/{instance}/{processor}"
    };
  }
  
  // Update a processor
  rpc EditProcessor(EditProcessorRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      patch: "/api/processors/{instance}/{processor}"
      body: "*"
    };
  }
  
  // Create a processor
  rpc CreateProcessor(CreateProcessorRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/processors"
      body: "*"
    };
  }

  // Get a parameter's value
  rpc GetParameterValue(GetParameterValueRequest) returns (pvalue.ParameterValue) {
    option (yamcs.api.route) = {
      get: "/api/processors/{instance}/{processor}/parameters/{name*}"
    };
  }
  
  // Set a parameter's value
  rpc SetParameterValue(SetParameterValueRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      put: "/api/processors/{instance}/{processor}/parameters/{name*}"
      body: "value"
      additional_bindings {
        post: "/api/processors/{instance}/{processor}/parameters/{name*}"
        body: "value"
      }
    };
  }
  
  // Batch get the value of multiple parameters
  rpc BatchGetParameterValues(BatchGetParameterValuesRequest) returns (BatchGetParameterValuesResponse) {
    option (yamcs.api.route) = {
      post: "/api/processors/{instance}/{processor}/parameters:batchGet"
      body: "*"
    };
  }
  
  // Batch set the value of multiple parameters
  rpc BatchSetParameterValues(BatchSetParameterValuesRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/processors/{instance}/{processor}/parameters:batchSet"
      body: "*"
    };
  }
  
  // Issue a command
  rpc IssueCommand(IssueCommandRequest) returns (IssueCommandResponse) {
    option (yamcs.api.route) = {
      post: "/api/processors/{instance}/{processor}/commands/{name*}"
      body: "*"
    };
  }

  // Update command history
  rpc UpdateCommandHistory(UpdateCommandHistoryRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/processors/{instance}/{processor}/commandhistory/{name*}"
      body: "*"
    };
  }
  
  // Receive TM statistics updates
  rpc SubscribeTMStatistics(SubscribeTMStatisticsRequest) returns (stream yamcsManagement.Statistics) {
    option (yamcs.api.websocket) = {
      topic: "tmstats"
    };
  }
}

message ListProcessorTypesResponse {
  repeated string types = 1;
}

message ListProcessorsRequest {
  optional string instance = 1;
}

message ListProcessorsResponse {
  repeated yamcsManagement.ProcessorInfo processors = 1;
}

message SubscribeTMStatisticsRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message GetProcessorRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message DeleteProcessorRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message CreateProcessorRequest {
  optional string instance = 1;
  optional string name = 2;
  repeated int32 clientId = 3;
  optional bool persistent = 4;
  optional string type = 5;
  optional string config = 6;
}

message EditProcessorRequest {
  optional string instance = 1;
  optional string processor = 2;
  optional string state = 3;
  optional google.protobuf.Timestamp seek = 4;
  optional string speed = 5;
}

message GetParameterValueRequest {
  optional string instance = 1;
  optional string processor = 2;
  optional string name = 3;
  optional bool fromCache = 4;
  
  // if not fromCache, wait this time (in milliseconds) to receive the parameter
  optional uint64 timeout = 5;
}

message SetParameterValueRequest {
  optional string instance = 1;
  optional string processor = 2;
  optional string name = 3;
  optional Value value = 4;
}

message BatchGetParameterValuesRequest {
  optional string instance = 4;
  optional string processor = 5;
  repeated NamedObjectId id = 1;
  optional bool fromCache = 2;
  
  // if not fromCache, wait this time (in milliseconds) to receive the parameter
  optional uint64 timeout = 3;
}

message BatchGetParameterValuesResponse {
  repeated pvalue.ParameterValue value = 1;
}

message BatchSetParameterValuesRequest {
  message SetParameterValueRequest {
    optional NamedObjectId id = 1;
    optional Value value = 2;
  }
  optional string instance = 2;
  optional string processor = 3;
  repeated SetParameterValueRequest request = 1;
}

message IssueCommandRequest {
  message Assignment {
    optional string name = 1;
    optional string value = 2;
  }
  optional string instance = 6;
  optional string processor = 7;
  optional string name = 8;
  repeated Assignment assignment = 1;
  optional string origin = 2;
  optional int32 sequenceNumber = 3;
  optional bool dryRun = 4;
  
  optional string comment = 5;
  // other command options
  optional commanding.CommandOptions commandOptions = 10;
}

message IssueCommandResponse {
  optional string id = 5;
  optional google.protobuf.Timestamp generationTime = 6;
  optional string origin = 7;
  optional int32 sequenceNumber = 8;
  optional string commandName = 9;
  optional string source = 2;
  optional string hex = 3;
  optional bytes binary = 4;
  optional string username = 11;
  optional string queue = 10;
}

message UpdateCommandHistoryRequest {
  optional string instance = 1;
  optional string processor = 2;
  optional string name = 3;
  optional string id = 4;
  repeated commanding.CommandHistoryAttribute attributes = 5;
}
